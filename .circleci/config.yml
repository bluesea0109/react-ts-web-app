version: 2
orbs:
  slack: circleci/slack@3.4.2
references:
  default_config: &default_config
    docker:
      - image: gcr.io/bavard-infra/devops:1.0.0
        auth:
          username: _json_key  # default username when using a JSON key file to authenticate
          password: $GOOGLE_CREDENTIALS  # JSON service account you created

  notifications: &notifications
    only_for_branches: master
    include_project_field: true
    include_job_number_field: true
    include_visit_job_action: true
    fail_only: true
    webhook: https://hooks.slack.com/services/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

  test: &test
    <<: *default_config
    steps:
      - checkout
      - run:
          name: test
          command: |
            set -eo pipefail
            npm install
            npm run lint
      - slack/status:
          <<: *notifications

  deploy-dev: &deploy-dev
    <<: *default_config
    resource_class: large
    steps:
      - checkout
      - run:
          name: deploy
          command: |
            echo $GOOGLE_CREDENTIALS | gcloud auth activate-service-account --key-file=-
            gcloud config set project bavard-dev
            gcloud config set compute/zone us-west3-a
            ./scripts/deploy-dev.sh
      - slack/status:
          <<: *notifications

  deploy-prod: &deploy-prod
    <<: *default_config
    resource_class: large
    steps:
      - checkout
      - run:
          name: deploy
          command: |
            echo $GOOGLE_CREDENTIALS | gcloud auth activate-service-account --key-file=-
            gcloud config set project bavard-dev
            gcloud config set compute/zone us-west3-a
            ./scripts/deploy-prod.sh
      - slack/status:
          <<: *notifications

jobs:
  test:
    <<: *test
  deploy-dev:
    <<: *deploy-dev
  deploy-prod:
    <<: *deploy-prod
workflows:
  version: 2
  deploy:
    jobs:
      - test:
          context: bavard
      - deploy-dev:
          context: bavard
          requires:
            - test
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
           - deploy-dev
      - deploy-prod:
          context: bavard
          filters:
            branches:
              only: master
          requires:
          - hold